//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 2.0.50727.1433.
// 
#pragma warning disable 1591


namespace CampaignMonitorAPIWrapper
{

    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;

    [global::System.ComponentModel.Browsable(false)]
    [global::System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    public class CampaignMonitorAPI
    {


        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        [System.Web.Services.WebServiceBindingAttribute(Name = "apiSoap", Namespace = "http://api.createsend.com/api/")]
        [System.Xml.Serialization.XmlIncludeAttribute(typeof(CampaignSummary))]
        [System.Xml.Serialization.XmlIncludeAttribute(typeof(Subscriber[]))]
        [System.Xml.Serialization.XmlIncludeAttribute(typeof(Campaign[]))]
        [System.Xml.Serialization.XmlIncludeAttribute(typeof(SubscriberClick[]))]
        [System.Xml.Serialization.XmlIncludeAttribute(typeof(SubscriberOpen[]))]
        [System.Xml.Serialization.XmlIncludeAttribute(typeof(SubscriberBounce[]))]
        [System.Xml.Serialization.XmlIncludeAttribute(typeof(SubscriberUnsubscribe[]))]
        [System.Xml.Serialization.XmlIncludeAttribute(typeof(Client[]))]

        public partial class api : System.Web.Services.Protocols.SoapHttpClientProtocol
        {

            private System.Threading.SendOrPostCallback AddSubscriberWithCustomFieldsOperationCompleted;

            private System.Threading.SendOrPostCallback AddAndResubscribeWithCustomFieldsOperationCompleted;

            private System.Threading.SendOrPostCallback AddSubscriberOperationCompleted;

            private System.Threading.SendOrPostCallback AddAndResubscribeOperationCompleted;

            private System.Threading.SendOrPostCallback UnsubscribeOperationCompleted;

            private System.Threading.SendOrPostCallback GetSubscribersOperationCompleted;

            private System.Threading.SendOrPostCallback GetUnsubscribedOperationCompleted;

            private System.Threading.SendOrPostCallback GetBouncedOperationCompleted;

            private System.Threading.SendOrPostCallback GetSingleSubscriberOperationCompleted;

            private System.Threading.SendOrPostCallback GetIsSubscribedOperationCompleted;

            private System.Threading.SendOrPostCallback GetClientCampaignsOperationCompleted;

            private System.Threading.SendOrPostCallback GetClientListsOperationCompleted;

            private System.Threading.SendOrPostCallback GetClientSegmentsOperationCompleted;

            private System.Threading.SendOrPostCallback GetSubscriberClicksOperationCompleted;

            private System.Threading.SendOrPostCallback GetCampaignOpensOperationCompleted;

            private System.Threading.SendOrPostCallback GetCampaignBouncesOperationCompleted;

            private System.Threading.SendOrPostCallback GetCampaignUnsubscribesOperationCompleted;

            private System.Threading.SendOrPostCallback GetCampaignSummaryOperationCompleted;

            private System.Threading.SendOrPostCallback GetCampaignListsOperationCompleted;

            private System.Threading.SendOrPostCallback GetClientsOperationCompleted;

            private System.Threading.SendOrPostCallback GetSystemDateOperationCompleted;

            private System.Threading.SendOrPostCallback CreateCampaignOperationCompleted;

            private System.Threading.SendOrPostCallback SendCampaignOperationCompleted;

            private bool useDefaultCredentialsSetExplicitly;

            /// <remarks/>
            public api()
            {
                this.Url = "http://api.createsend.com/api/api.asmx";
                if ((this.IsLocalFileSystemWebService(this.Url) == true))
                {
                    this.UseDefaultCredentials = true;
                    this.useDefaultCredentialsSetExplicitly = false;
                }
                else
                {
                    this.useDefaultCredentialsSetExplicitly = true;
                }
            }

            public new string Url
            {
                get
                {
                    return base.Url;
                }
                set
                {
                    if ((((this.IsLocalFileSystemWebService(base.Url) == true)
                                && (this.useDefaultCredentialsSetExplicitly == false))
                                && (this.IsLocalFileSystemWebService(value) == false)))
                    {
                        base.UseDefaultCredentials = false;
                    }
                    base.Url = value;
                }
            }

            public new bool UseDefaultCredentials
            {
                get
                {
                    return base.UseDefaultCredentials;
                }
                set
                {
                    base.UseDefaultCredentials = value;
                    this.useDefaultCredentialsSetExplicitly = true;
                }
            }

            /// <remarks/>
            public event AddSubscriberWithCustomFieldsCompletedEventHandler AddSubscriberWithCustomFieldsCompleted;

            /// <remarks/>
            public event AddAndResubscribeWithCustomFieldsCompletedEventHandler AddAndResubscribeWithCustomFieldsCompleted;

            /// <remarks/>
            public event AddSubscriberCompletedEventHandler AddSubscriberCompleted;

            /// <remarks/>
            public event AddAndResubscribeCompletedEventHandler AddAndResubscribeCompleted;

            /// <remarks/>
            public event UnsubscribeCompletedEventHandler UnsubscribeCompleted;

            /// <remarks/>
            public event GetSubscribersCompletedEventHandler GetSubscribersCompleted;

            /// <remarks/>
            public event GetUnsubscribedCompletedEventHandler GetUnsubscribedCompleted;

            /// <remarks/>
            public event GetBouncedCompletedEventHandler GetBouncedCompleted;

            /// <remarks/>
            public event GetSingleSubscriberCompletedEventHandler GetSingleSubscriberCompleted;

            /// <remarks/>
            public event GetIsSubscribedCompletedEventHandler GetIsSubscribedCompleted;

            /// <remarks/>
            public event GetClientCampaignsCompletedEventHandler GetClientCampaignsCompleted;

            /// <remarks/>
            public event GetClientListsCompletedEventHandler GetClientListsCompleted;

            /// <remarks/>
            public event GetClientSegmentsCompletedEventHandler GetClientSegmentsCompleted;

            /// <remarks/>
            public event GetSubscriberClicksCompletedEventHandler GetSubscriberClicksCompleted;

            /// <remarks/>
            public event GetCampaignOpensCompletedEventHandler GetCampaignOpensCompleted;

            /// <remarks/>
            public event GetCampaignBouncesCompletedEventHandler GetCampaignBouncesCompleted;

            /// <remarks/>
            public event GetCampaignUnsubscribesCompletedEventHandler GetCampaignUnsubscribesCompleted;

            /// <remarks/>
            public event GetCampaignSummaryCompletedEventHandler GetCampaignSummaryCompleted;

            /// <remarks/>
            public event GetCampaignListsCompletedEventHandler GetCampaignListsCompleted;

            /// <remarks/>
            public event GetClientsCompletedEventHandler GetClientsCompleted;

            /// <remarks/>
            public event GetSystemDateCompletedEventHandler GetSystemDateCompleted;

            /// <remarks/>
            public event CreateCampaignCompletedEventHandler CreateCampaignCompleted;

            /// <remarks/>
            public event SendCampaignCompletedEventHandler SendCampaignCompleted;

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/Subscriber.AddWithCustomFields", RequestElementName = "Subscriber.AddWithCustomFields", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "Subscriber.AddWithCustomFieldsResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("Subscriber.AddWithCustomFieldsResult")]
            public Result AddSubscriberWithCustomFields(string ApiKey, string ListID, string Email, string Name, SubscriberCustomField[] CustomFields)
            {
                object[] results = this.Invoke("AddSubscriberWithCustomFields", new object[] {
                        ApiKey,
                        ListID,
                        Email,
                        Name,
                        CustomFields});
                return ((Result)(results[0]));
            }

            /// <remarks/>
            public void AddSubscriberWithCustomFieldsAsync(string ApiKey, string ListID, string Email, string Name, SubscriberCustomField[] CustomFields)
            {
                this.AddSubscriberWithCustomFieldsAsync(ApiKey, ListID, Email, Name, CustomFields, null);
            }

            /// <remarks/>
            public void AddSubscriberWithCustomFieldsAsync(string ApiKey, string ListID, string Email, string Name, SubscriberCustomField[] CustomFields, object userState)
            {
                if ((this.AddSubscriberWithCustomFieldsOperationCompleted == null))
                {
                    this.AddSubscriberWithCustomFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSubscriberWithCustomFieldsOperationCompleted);
                }
                this.InvokeAsync("AddSubscriberWithCustomFields", new object[] {
                        ApiKey,
                        ListID,
                        Email,
                        Name,
                        CustomFields}, this.AddSubscriberWithCustomFieldsOperationCompleted, userState);
            }

            private void OnAddSubscriberWithCustomFieldsOperationCompleted(object arg)
            {
                if ((this.AddSubscriberWithCustomFieldsCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.AddSubscriberWithCustomFieldsCompleted(this, new AddSubscriberWithCustomFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/Subscriber.AddAndResubscribeWithCustomFields", RequestElementName = "Subscriber.AddAndResubscribeWithCustomFields", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "Subscriber.AddAndResubscribeWithCustomFieldsResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("Subscriber.AddAndResubscribeWithCustomFieldsResult")]
            public Result AddAndResubscribeWithCustomFields(string ApiKey, string ListID, string Email, string Name, SubscriberCustomField[] CustomFields)
            {
                object[] results = this.Invoke("AddAndResubscribeWithCustomFields", new object[] {
                        ApiKey,
                        ListID,
                        Email,
                        Name,
                        CustomFields});
                return ((Result)(results[0]));
            }

            /// <remarks/>
            public void AddAndResubscribeWithCustomFieldsAsync(string ApiKey, string ListID, string Email, string Name, SubscriberCustomField[] CustomFields)
            {
                this.AddAndResubscribeWithCustomFieldsAsync(ApiKey, ListID, Email, Name, CustomFields, null);
            }

            /// <remarks/>
            public void AddAndResubscribeWithCustomFieldsAsync(string ApiKey, string ListID, string Email, string Name, SubscriberCustomField[] CustomFields, object userState)
            {
                if ((this.AddAndResubscribeWithCustomFieldsOperationCompleted == null))
                {
                    this.AddAndResubscribeWithCustomFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAndResubscribeWithCustomFieldsOperationCompleted);
                }
                this.InvokeAsync("AddAndResubscribeWithCustomFields", new object[] {
                        ApiKey,
                        ListID,
                        Email,
                        Name,
                        CustomFields}, this.AddAndResubscribeWithCustomFieldsOperationCompleted, userState);
            }

            private void OnAddAndResubscribeWithCustomFieldsOperationCompleted(object arg)
            {
                if ((this.AddAndResubscribeWithCustomFieldsCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.AddAndResubscribeWithCustomFieldsCompleted(this, new AddAndResubscribeWithCustomFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/Subscriber.Add", RequestElementName = "Subscriber.Add", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "Subscriber.AddResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("Subscriber.AddResult")]
            public Result AddSubscriber(string ApiKey, string ListID, string Email, string Name)
            {
                object[] results = this.Invoke("AddSubscriber", new object[] {
                        ApiKey,
                        ListID,
                        Email,
                        Name});
                return ((Result)(results[0]));
            }

            /// <remarks/>
            public void AddSubscriberAsync(string ApiKey, string ListID, string Email, string Name)
            {
                this.AddSubscriberAsync(ApiKey, ListID, Email, Name, null);
            }

            /// <remarks/>
            public void AddSubscriberAsync(string ApiKey, string ListID, string Email, string Name, object userState)
            {
                if ((this.AddSubscriberOperationCompleted == null))
                {
                    this.AddSubscriberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSubscriberOperationCompleted);
                }
                this.InvokeAsync("AddSubscriber", new object[] {
                        ApiKey,
                        ListID,
                        Email,
                        Name}, this.AddSubscriberOperationCompleted, userState);
            }

            private void OnAddSubscriberOperationCompleted(object arg)
            {
                if ((this.AddSubscriberCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.AddSubscriberCompleted(this, new AddSubscriberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/Subscriber.AddAndResubscribe", RequestElementName = "Subscriber.AddAndResubscribe", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "Subscriber.AddAndResubscribeResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("Subscriber.AddAndResubscribeResult")]
            public Result AddAndResubscribe(string ApiKey, string ListID, string Email, string Name)
            {
                object[] results = this.Invoke("AddAndResubscribe", new object[] {
                        ApiKey,
                        ListID,
                        Email,
                        Name});
                return ((Result)(results[0]));
            }

            /// <remarks/>
            public void AddAndResubscribeAsync(string ApiKey, string ListID, string Email, string Name)
            {
                this.AddAndResubscribeAsync(ApiKey, ListID, Email, Name, null);
            }

            /// <remarks/>
            public void AddAndResubscribeAsync(string ApiKey, string ListID, string Email, string Name, object userState)
            {
                if ((this.AddAndResubscribeOperationCompleted == null))
                {
                    this.AddAndResubscribeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAndResubscribeOperationCompleted);
                }
                this.InvokeAsync("AddAndResubscribe", new object[] {
                        ApiKey,
                        ListID,
                        Email,
                        Name}, this.AddAndResubscribeOperationCompleted, userState);
            }

            private void OnAddAndResubscribeOperationCompleted(object arg)
            {
                if ((this.AddAndResubscribeCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.AddAndResubscribeCompleted(this, new AddAndResubscribeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/Subscriber.Unsubscribe", RequestElementName = "Subscriber.Unsubscribe", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "Subscriber.UnsubscribeResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("Subscriber.UnsubscribeResult")]
            public Result Unsubscribe(string ApiKey, string ListID, string Email)
            {
                object[] results = this.Invoke("Unsubscribe", new object[] {
                        ApiKey,
                        ListID,
                        Email});
                return ((Result)(results[0]));
            }

            /// <remarks/>
            public void UnsubscribeAsync(string ApiKey, string ListID, string Email)
            {
                this.UnsubscribeAsync(ApiKey, ListID, Email, null);
            }

            /// <remarks/>
            public void UnsubscribeAsync(string ApiKey, string ListID, string Email, object userState)
            {
                if ((this.UnsubscribeOperationCompleted == null))
                {
                    this.UnsubscribeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnsubscribeOperationCompleted);
                }
                this.InvokeAsync("Unsubscribe", new object[] {
                        ApiKey,
                        ListID,
                        Email}, this.UnsubscribeOperationCompleted, userState);
            }

            private void OnUnsubscribeOperationCompleted(object arg)
            {
                if ((this.UnsubscribeCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.UnsubscribeCompleted(this, new UnsubscribeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/Subscribers.GetActive", RequestElementName = "Subscribers.GetActive", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "Subscribers.GetActiveResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("Subscribers.GetActiveResult")]
            public object GetSubscribers(string ApiKey, string ListID, string Date)
            {
                object[] results = this.Invoke("GetSubscribers", new object[] {
                        ApiKey,
                        ListID,
                        Date});
                return ((object)(results[0]));
            }

            /// <remarks/>
            public void GetSubscribersAsync(string ApiKey, string ListID, string Date)
            {
                this.GetSubscribersAsync(ApiKey, ListID, Date, null);
            }

            /// <remarks/>
            public void GetSubscribersAsync(string ApiKey, string ListID, string Date, object userState)
            {
                if ((this.GetSubscribersOperationCompleted == null))
                {
                    this.GetSubscribersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubscribersOperationCompleted);
                }
                this.InvokeAsync("GetSubscribers", new object[] {
                        ApiKey,
                        ListID,
                        Date}, this.GetSubscribersOperationCompleted, userState);
            }

            private void OnGetSubscribersOperationCompleted(object arg)
            {
                if ((this.GetSubscribersCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.GetSubscribersCompleted(this, new GetSubscribersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/Subscribers.GetUnsubscribed", RequestElementName = "Subscribers.GetUnsubscribed", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "Subscribers.GetUnsubscribedResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("Subscribers.GetUnsubscribedResult")]
            public object GetUnsubscribed(string ApiKey, string ListID, string Date)
            {
                object[] results = this.Invoke("GetUnsubscribed", new object[] {
                        ApiKey,
                        ListID,
                        Date});
                return ((object)(results[0]));
            }

            /// <remarks/>
            public void GetUnsubscribedAsync(string ApiKey, string ListID, string Date)
            {
                this.GetUnsubscribedAsync(ApiKey, ListID, Date, null);
            }

            /// <remarks/>
            public void GetUnsubscribedAsync(string ApiKey, string ListID, string Date, object userState)
            {
                if ((this.GetUnsubscribedOperationCompleted == null))
                {
                    this.GetUnsubscribedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUnsubscribedOperationCompleted);
                }
                this.InvokeAsync("GetUnsubscribed", new object[] {
                        ApiKey,
                        ListID,
                        Date}, this.GetUnsubscribedOperationCompleted, userState);
            }

            private void OnGetUnsubscribedOperationCompleted(object arg)
            {
                if ((this.GetUnsubscribedCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.GetUnsubscribedCompleted(this, new GetUnsubscribedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/Subscribers.GetBounced", RequestElementName = "Subscribers.GetBounced", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "Subscribers.GetBouncedResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("Subscribers.GetBouncedResult")]
            public object GetBounced(string ApiKey, string ListID, string Date)
            {
                object[] results = this.Invoke("GetBounced", new object[] {
                        ApiKey,
                        ListID,
                        Date});
                return ((object)(results[0]));
            }

            /// <remarks/>
            public void GetBouncedAsync(string ApiKey, string ListID, string Date)
            {
                this.GetBouncedAsync(ApiKey, ListID, Date, null);
            }

            /// <remarks/>
            public void GetBouncedAsync(string ApiKey, string ListID, string Date, object userState)
            {
                if ((this.GetBouncedOperationCompleted == null))
                {
                    this.GetBouncedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBouncedOperationCompleted);
                }
                this.InvokeAsync("GetBounced", new object[] {
                        ApiKey,
                        ListID,
                        Date}, this.GetBouncedOperationCompleted, userState);
            }

            private void OnGetBouncedOperationCompleted(object arg)
            {
                if ((this.GetBouncedCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.GetBouncedCompleted(this, new GetBouncedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/Subscribers.GetSingleSubscriber", RequestElementName = "Subscribers.GetSingleSubscriber", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "Subscribers.GetSingleSubscriberResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("Subscribers.GetSingleSubscriberResult")]
            public object GetSingleSubscriber(string ApiKey, string ListID, string EmailAddress)
            {
                object[] results = this.Invoke("GetSingleSubscriber", new object[] {
                        ApiKey,
                        ListID,
                        EmailAddress});
                return ((object)(results[0]));
            }

            /// <remarks/>
            public void GetSingleSubscriberAsync(string ApiKey, string ListID, string EmailAddress)
            {
                this.GetSingleSubscriberAsync(ApiKey, ListID, EmailAddress, null);
            }

            /// <remarks/>
            public void GetSingleSubscriberAsync(string ApiKey, string ListID, string EmailAddress, object userState)
            {
                if ((this.GetSingleSubscriberOperationCompleted == null))
                {
                    this.GetSingleSubscriberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSingleSubscriberOperationCompleted);
                }
                this.InvokeAsync("GetSingleSubscriber", new object[] {
                        ApiKey,
                        ListID,
                        EmailAddress}, this.GetSingleSubscriberOperationCompleted, userState);
            }

            private void OnGetSingleSubscriberOperationCompleted(object arg)
            {
                if ((this.GetSingleSubscriberCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.GetSingleSubscriberCompleted(this, new GetSingleSubscriberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/Subscribers.GetIsSubscribed", RequestElementName = "Subscribers.GetIsSubscribed", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "Subscribers.GetIsSubscribedResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("Subscribers.GetIsSubscribedResult")]
            public object GetIsSubscribed(string ApiKey, string ListID, string Email)
            {
                object[] results = this.Invoke("GetIsSubscribed", new object[] {
                        ApiKey,
                        ListID,
                        Email});
                return ((object)(results[0]));
            }

            /// <remarks/>
            public void GetIsSubscribedAsync(string ApiKey, string ListID, string Email)
            {
                this.GetIsSubscribedAsync(ApiKey, ListID, Email, null);
            }

            /// <remarks/>
            public void GetIsSubscribedAsync(string ApiKey, string ListID, string Email, object userState)
            {
                if ((this.GetIsSubscribedOperationCompleted == null))
                {
                    this.GetIsSubscribedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIsSubscribedOperationCompleted);
                }
                this.InvokeAsync("GetIsSubscribed", new object[] {
                        ApiKey,
                        ListID,
                        Email}, this.GetIsSubscribedOperationCompleted, userState);
            }

            private void OnGetIsSubscribedOperationCompleted(object arg)
            {
                if ((this.GetIsSubscribedCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.GetIsSubscribedCompleted(this, new GetIsSubscribedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/Client.GetCampaigns", RequestElementName = "Client.GetCampaigns", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "Client.GetCampaignsResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("Client.GetCampaignsResult")]
            public object GetClientCampaigns(string ApiKey, string ClientID)
            {
                object[] results = this.Invoke("GetClientCampaigns", new object[] {
                        ApiKey,
                        ClientID});
                return ((object)(results[0]));
            }

            /// <remarks/>
            public void GetClientCampaignsAsync(string ApiKey, string ClientID)
            {
                this.GetClientCampaignsAsync(ApiKey, ClientID, null);
            }

            /// <remarks/>
            public void GetClientCampaignsAsync(string ApiKey, string ClientID, object userState)
            {
                if ((this.GetClientCampaignsOperationCompleted == null))
                {
                    this.GetClientCampaignsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientCampaignsOperationCompleted);
                }
                this.InvokeAsync("GetClientCampaigns", new object[] {
                        ApiKey,
                        ClientID}, this.GetClientCampaignsOperationCompleted, userState);
            }

            private void OnGetClientCampaignsOperationCompleted(object arg)
            {
                if ((this.GetClientCampaignsCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.GetClientCampaignsCompleted(this, new GetClientCampaignsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/Client.GetLists", RequestElementName = "Client.GetLists", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "Client.GetListsResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("Client.GetListsResult")]
            public object GetClientLists(string ApiKey, string ClientID)
            {
                object[] results = this.Invoke("GetClientLists", new object[] {
                        ApiKey,
                        ClientID});
                return ((object)(results[0]));
            }

            /// <remarks/>
            public void GetClientListsAsync(string ApiKey, string ClientID)
            {
                this.GetClientListsAsync(ApiKey, ClientID, null);
            }

            /// <remarks/>
            public void GetClientListsAsync(string ApiKey, string ClientID, object userState)
            {
                if ((this.GetClientListsOperationCompleted == null))
                {
                    this.GetClientListsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientListsOperationCompleted);
                }
                this.InvokeAsync("GetClientLists", new object[] {
                        ApiKey,
                        ClientID}, this.GetClientListsOperationCompleted, userState);
            }

            private void OnGetClientListsOperationCompleted(object arg)
            {
                if ((this.GetClientListsCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.GetClientListsCompleted(this, new GetClientListsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/Client.GetSegments", RequestElementName = "Client.GetSegments", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "Client.GetSegmentsResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("Client.GetSegmentsResult")]
            public object GetClientSegments(string ApiKey, string ClientID)
            {
                object[] results = this.Invoke("GetClientSegments", new object[] {
                        ApiKey,
                        ClientID});
                return ((object)(results[0]));
            }

            /// <remarks/>
            public void GetClientSegmentsAsync(string ApiKey, string ClientID)
            {
                this.GetClientSegmentsAsync(ApiKey, ClientID, null);
            }

            /// <remarks/>
            public void GetClientSegmentsAsync(string ApiKey, string ClientID, object userState)
            {
                if ((this.GetClientSegmentsOperationCompleted == null))
                {
                    this.GetClientSegmentsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientSegmentsOperationCompleted);
                }
                this.InvokeAsync("GetClientSegments", new object[] {
                        ApiKey,
                        ClientID}, this.GetClientSegmentsOperationCompleted, userState);
            }

            private void OnGetClientSegmentsOperationCompleted(object arg)
            {
                if ((this.GetClientSegmentsCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.GetClientSegmentsCompleted(this, new GetClientSegmentsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/Campaign.GetSubscriberClicks", RequestElementName = "Campaign.GetSubscriberClicks", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "Campaign.GetSubscriberClicksResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("Campaign.GetSubscriberClicksResult")]
            public object GetSubscriberClicks(string ApiKey, string CampaignID)
            {
                object[] results = this.Invoke("GetSubscriberClicks", new object[] {
                        ApiKey,
                        CampaignID});
                return ((object)(results[0]));
            }

            /// <remarks/>
            public void GetSubscriberClicksAsync(string ApiKey, string CampaignID)
            {
                this.GetSubscriberClicksAsync(ApiKey, CampaignID, null);
            }

            /// <remarks/>
            public void GetSubscriberClicksAsync(string ApiKey, string CampaignID, object userState)
            {
                if ((this.GetSubscriberClicksOperationCompleted == null))
                {
                    this.GetSubscriberClicksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSubscriberClicksOperationCompleted);
                }
                this.InvokeAsync("GetSubscriberClicks", new object[] {
                        ApiKey,
                        CampaignID}, this.GetSubscriberClicksOperationCompleted, userState);
            }

            private void OnGetSubscriberClicksOperationCompleted(object arg)
            {
                if ((this.GetSubscriberClicksCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.GetSubscriberClicksCompleted(this, new GetSubscriberClicksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/Campaign.GetOpens", RequestElementName = "Campaign.GetOpens", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "Campaign.GetOpensResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("Campaign.GetOpensResult")]
            public object GetCampaignOpens(string ApiKey, string CampaignID)
            {
                object[] results = this.Invoke("GetCampaignOpens", new object[] {
                        ApiKey,
                        CampaignID});
                return ((object)(results[0]));
            }

            /// <remarks/>
            public void GetCampaignOpensAsync(string ApiKey, string CampaignID)
            {
                this.GetCampaignOpensAsync(ApiKey, CampaignID, null);
            }

            /// <remarks/>
            public void GetCampaignOpensAsync(string ApiKey, string CampaignID, object userState)
            {
                if ((this.GetCampaignOpensOperationCompleted == null))
                {
                    this.GetCampaignOpensOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignOpensOperationCompleted);
                }
                this.InvokeAsync("GetCampaignOpens", new object[] {
                        ApiKey,
                        CampaignID}, this.GetCampaignOpensOperationCompleted, userState);
            }

            private void OnGetCampaignOpensOperationCompleted(object arg)
            {
                if ((this.GetCampaignOpensCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.GetCampaignOpensCompleted(this, new GetCampaignOpensCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/Campaign.GetBounces", RequestElementName = "Campaign.GetBounces", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "Campaign.GetBouncesResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("Campaign.GetBouncesResult")]
            public object GetCampaignBounces(string ApiKey, string CampaignID)
            {
                object[] results = this.Invoke("GetCampaignBounces", new object[] {
                        ApiKey,
                        CampaignID});
                return ((object)(results[0]));
            }

            /// <remarks/>
            public void GetCampaignBouncesAsync(string ApiKey, string CampaignID)
            {
                this.GetCampaignBouncesAsync(ApiKey, CampaignID, null);
            }

            /// <remarks/>
            public void GetCampaignBouncesAsync(string ApiKey, string CampaignID, object userState)
            {
                if ((this.GetCampaignBouncesOperationCompleted == null))
                {
                    this.GetCampaignBouncesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignBouncesOperationCompleted);
                }
                this.InvokeAsync("GetCampaignBounces", new object[] {
                        ApiKey,
                        CampaignID}, this.GetCampaignBouncesOperationCompleted, userState);
            }

            private void OnGetCampaignBouncesOperationCompleted(object arg)
            {
                if ((this.GetCampaignBouncesCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.GetCampaignBouncesCompleted(this, new GetCampaignBouncesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/Campaign.GetUnsubscribes", RequestElementName = "Campaign.GetUnsubscribes", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "Campaign.GetUnsubscribesResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("Campaign.GetUnsubscribesResult")]
            public object GetCampaignUnsubscribes(string ApiKey, string CampaignID)
            {
                object[] results = this.Invoke("GetCampaignUnsubscribes", new object[] {
                        ApiKey,
                        CampaignID});
                return ((object)(results[0]));
            }

            /// <remarks/>
            public void GetCampaignUnsubscribesAsync(string ApiKey, string CampaignID)
            {
                this.GetCampaignUnsubscribesAsync(ApiKey, CampaignID, null);
            }

            /// <remarks/>
            public void GetCampaignUnsubscribesAsync(string ApiKey, string CampaignID, object userState)
            {
                if ((this.GetCampaignUnsubscribesOperationCompleted == null))
                {
                    this.GetCampaignUnsubscribesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignUnsubscribesOperationCompleted);
                }
                this.InvokeAsync("GetCampaignUnsubscribes", new object[] {
                        ApiKey,
                        CampaignID}, this.GetCampaignUnsubscribesOperationCompleted, userState);
            }

            private void OnGetCampaignUnsubscribesOperationCompleted(object arg)
            {
                if ((this.GetCampaignUnsubscribesCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.GetCampaignUnsubscribesCompleted(this, new GetCampaignUnsubscribesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/Campaign.GetSummary", RequestElementName = "Campaign.GetSummary", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "Campaign.GetSummaryResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("Campaign.GetSummaryResult")]
            public object GetCampaignSummary(string ApiKey, string CampaignID)
            {
                object[] results = this.Invoke("GetCampaignSummary", new object[] {
                        ApiKey,
                        CampaignID});
                return ((object)(results[0]));
            }

            /// <remarks/>
            public void GetCampaignSummaryAsync(string ApiKey, string CampaignID)
            {
                this.GetCampaignSummaryAsync(ApiKey, CampaignID, null);
            }

            /// <remarks/>
            public void GetCampaignSummaryAsync(string ApiKey, string CampaignID, object userState)
            {
                if ((this.GetCampaignSummaryOperationCompleted == null))
                {
                    this.GetCampaignSummaryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignSummaryOperationCompleted);
                }
                this.InvokeAsync("GetCampaignSummary", new object[] {
                        ApiKey,
                        CampaignID}, this.GetCampaignSummaryOperationCompleted, userState);
            }

            private void OnGetCampaignSummaryOperationCompleted(object arg)
            {
                if ((this.GetCampaignSummaryCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.GetCampaignSummaryCompleted(this, new GetCampaignSummaryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/Campaign.GetLists", RequestElementName = "Campaign.GetLists", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "Campaign.GetListsResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("Campaign.GetListsResult")]
            public object GetCampaignLists(string ApiKey, string CampaignID)
            {
                object[] results = this.Invoke("GetCampaignLists", new object[] {
                        ApiKey,
                        CampaignID});
                return ((object)(results[0]));
            }

            /// <remarks/>
            public void GetCampaignListsAsync(string ApiKey, string CampaignID)
            {
                this.GetCampaignListsAsync(ApiKey, CampaignID, null);
            }

            /// <remarks/>
            public void GetCampaignListsAsync(string ApiKey, string CampaignID, object userState)
            {
                if ((this.GetCampaignListsOperationCompleted == null))
                {
                    this.GetCampaignListsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCampaignListsOperationCompleted);
                }
                this.InvokeAsync("GetCampaignLists", new object[] {
                        ApiKey,
                        CampaignID}, this.GetCampaignListsOperationCompleted, userState);
            }

            private void OnGetCampaignListsOperationCompleted(object arg)
            {
                if ((this.GetCampaignListsCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.GetCampaignListsCompleted(this, new GetCampaignListsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/User.GetClients", RequestElementName = "User.GetClients", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "User.GetClientsResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("User.GetClientsResult")]
            public object GetClients(string ApiKey)
            {
                object[] results = this.Invoke("GetClients", new object[] {
                        ApiKey});
                return ((object)(results[0]));
            }

            /// <remarks/>
            public void GetClientsAsync(string ApiKey)
            {
                this.GetClientsAsync(ApiKey, null);
            }

            /// <remarks/>
            public void GetClientsAsync(string ApiKey, object userState)
            {
                if ((this.GetClientsOperationCompleted == null))
                {
                    this.GetClientsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetClientsOperationCompleted);
                }
                this.InvokeAsync("GetClients", new object[] {
                        ApiKey}, this.GetClientsOperationCompleted, userState);
            }

            private void OnGetClientsOperationCompleted(object arg)
            {
                if ((this.GetClientsCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.GetClientsCompleted(this, new GetClientsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/User.GetSystemDate", RequestElementName = "User.GetSystemDate", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "User.GetSystemDateResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("User.GetSystemDateResult")]
            public object GetSystemDate(string ApiKey)
            {
                object[] results = this.Invoke("GetSystemDate", new object[] {
                        ApiKey});
                return ((object)(results[0]));
            }

            /// <remarks/>
            public void GetSystemDateAsync(string ApiKey)
            {
                this.GetSystemDateAsync(ApiKey, null);
            }

            /// <remarks/>
            public void GetSystemDateAsync(string ApiKey, object userState)
            {
                if ((this.GetSystemDateOperationCompleted == null))
                {
                    this.GetSystemDateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSystemDateOperationCompleted);
                }
                this.InvokeAsync("GetSystemDate", new object[] {
                        ApiKey}, this.GetSystemDateOperationCompleted, userState);
            }

            private void OnGetSystemDateOperationCompleted(object arg)
            {
                if ((this.GetSystemDateCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.GetSystemDateCompleted(this, new GetSystemDateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/Campaign.Create", RequestElementName = "Campaign.Create", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "Campaign.CreateResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("Campaign.CreateResult")]
            public object CreateCampaign(string ApiKey, string ClientID, string CampaignName, string CampaignSubject, string FromName, string FromEmail, string ReplyTo, string HtmlUrl, string TextUrl, string[] SubscriberListIDs, List[] ListSegments)
            {
                object[] results = this.Invoke("CreateCampaign", new object[] {
                        ApiKey,
                        ClientID,
                        CampaignName,
                        CampaignSubject,
                        FromName,
                        FromEmail,
                        ReplyTo,
                        HtmlUrl,
                        TextUrl,
                        SubscriberListIDs,
                        ListSegments});
                return ((object)(results[0]));
            }

            /// <remarks/>
            public void CreateCampaignAsync(string ApiKey, string ClientID, string CampaignName, string CampaignSubject, string FromName, string FromEmail, string ReplyTo, string HtmlUrl, string TextUrl, string[] SubscriberListIDs, List[] ListSegments)
            {
                this.CreateCampaignAsync(ApiKey, ClientID, CampaignName, CampaignSubject, FromName, FromEmail, ReplyTo, HtmlUrl, TextUrl, SubscriberListIDs, ListSegments, null);
            }

            /// <remarks/>
            public void CreateCampaignAsync(string ApiKey, string ClientID, string CampaignName, string CampaignSubject, string FromName, string FromEmail, string ReplyTo, string HtmlUrl, string TextUrl, string[] SubscriberListIDs, List[] ListSegments, object userState)
            {
                if ((this.CreateCampaignOperationCompleted == null))
                {
                    this.CreateCampaignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateCampaignOperationCompleted);
                }
                this.InvokeAsync("CreateCampaign", new object[] {
                        ApiKey,
                        ClientID,
                        CampaignName,
                        CampaignSubject,
                        FromName,
                        FromEmail,
                        ReplyTo,
                        HtmlUrl,
                        TextUrl,
                        SubscriberListIDs,
                        ListSegments}, this.CreateCampaignOperationCompleted, userState);
            }

            private void OnCreateCampaignOperationCompleted(object arg)
            {
                if ((this.CreateCampaignCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.CreateCampaignCompleted(this, new CreateCampaignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://api.createsend.com/api/Campaign.Send", RequestElementName = "Campaign.Send", RequestNamespace = "http://api.createsend.com/api/", ResponseElementName = "Campaign.SendResponse", ResponseNamespace = "http://api.createsend.com/api/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
            [return: System.Xml.Serialization.XmlElementAttribute("Campaign.SendResult")]
            public Result SendCampaign(string ApiKey, string CampaignID, string ConfirmationEmail, string SendDate)
            {
                object[] results = this.Invoke("SendCampaign", new object[] {
                        ApiKey,
                        CampaignID,
                        ConfirmationEmail,
                        SendDate});
                return ((Result)(results[0]));
            }

            /// <remarks/>
            public void SendCampaignAsync(string ApiKey, string CampaignID, string ConfirmationEmail, string SendDate)
            {
                this.SendCampaignAsync(ApiKey, CampaignID, ConfirmationEmail, SendDate, null);
            }

            /// <remarks/>
            public void SendCampaignAsync(string ApiKey, string CampaignID, string ConfirmationEmail, string SendDate, object userState)
            {
                if ((this.SendCampaignOperationCompleted == null))
                {
                    this.SendCampaignOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendCampaignOperationCompleted);
                }
                this.InvokeAsync("SendCampaign", new object[] {
                        ApiKey,
                        CampaignID,
                        ConfirmationEmail,
                        SendDate}, this.SendCampaignOperationCompleted, userState);
            }

            private void OnSendCampaignOperationCompleted(object arg)
            {
                if ((this.SendCampaignCompleted != null))
                {
                    System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                    this.SendCampaignCompleted(this, new SendCampaignCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
                }
            }

            /// <remarks/>
            public new void CancelAsync(object userState)
            {
                base.CancelAsync(userState);
            }

            private bool IsLocalFileSystemWebService(string url)
            {
                if (((url == null)
                            || (url == string.Empty)))
                {
                    return false;
                }
                System.Uri wsUri = new System.Uri(url);
                if (((wsUri.Port >= 1024)
                            && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0)))
                {
                    return true;
                }
                return false;
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
        [System.SerializableAttribute()]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.createsend.com/api/")]
        public partial class SubscriberCustomField
        {

            private string keyField;

            private string valueField;

            /// <remarks/>
            public string Key
            {
                get
                {
                    return this.keyField;
                }
                set
                {
                    this.keyField = value;
                }
            }

            /// <remarks/>
            public string Value
            {
                get
                {
                    return this.valueField;
                }
                set
                {
                    this.valueField = value;
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
        [System.SerializableAttribute()]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.createsend.com/api/")]
        public partial class Subscriber
        {

            private string emailAddressField;

            private string nameField;

            private string dateField;

            private string stateField;

            private SubscriberCustomField[] customFieldsField;

            /// <remarks/>
            public string EmailAddress
            {
                get
                {
                    return this.emailAddressField;
                }
                set
                {
                    this.emailAddressField = value;
                }
            }

            /// <remarks/>
            public string Name
            {
                get
                {
                    return this.nameField;
                }
                set
                {
                    this.nameField = value;
                }
            }

            /// <remarks/>
            public string Date
            {
                get
                {
                    return this.dateField;
                }
                set
                {
                    this.dateField = value;
                }
            }

            /// <remarks/>
            public string State
            {
                get
                {
                    return this.stateField;
                }
                set
                {
                    this.stateField = value;
                }
            }

            /// <remarks/>
            public SubscriberCustomField[] CustomFields
            {
                get
                {
                    return this.customFieldsField;
                }
                set
                {
                    this.customFieldsField = value;
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
        [System.SerializableAttribute()]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.createsend.com/api/")]
        public partial class Campaign
        {

            private string campaignIDField;

            private string subjectField;

            private string sentDateField;

            private int totalRecipientsField;

            /// <remarks/>
            public string CampaignID
            {
                get
                {
                    return this.campaignIDField;
                }
                set
                {
                    this.campaignIDField = value;
                }
            }

            /// <remarks/>
            public string Subject
            {
                get
                {
                    return this.subjectField;
                }
                set
                {
                    this.subjectField = value;
                }
            }

            /// <remarks/>
            public string SentDate
            {
                get
                {
                    return this.sentDateField;
                }
                set
                {
                    this.sentDateField = value;
                }
            }

            /// <remarks/>
            public int TotalRecipients
            {
                get
                {
                    return this.totalRecipientsField;
                }
                set
                {
                    this.totalRecipientsField = value;
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
        [System.SerializableAttribute()]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.createsend.com/api/")]
        public partial class List
        {

            private string listIDField;

            private string nameField;

            /// <remarks/>
            public string ListID
            {
                get
                {
                    return this.listIDField;
                }
                set
                {
                    this.listIDField = value;
                }
            }

            /// <remarks/>
            public string Name
            {
                get
                {
                    return this.nameField;
                }
                set
                {
                    this.nameField = value;
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
        [System.SerializableAttribute()]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.createsend.com/api/")]
        public partial class SubscriberClickedLink
        {

            private string linkField;

            private string clicksField;

            /// <remarks/>
            public string Link
            {
                get
                {
                    return this.linkField;
                }
                set
                {
                    this.linkField = value;
                }
            }

            /// <remarks/>
            public string Clicks
            {
                get
                {
                    return this.clicksField;
                }
                set
                {
                    this.clicksField = value;
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
        [System.SerializableAttribute()]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.createsend.com/api/")]
        public partial class SubscriberClick
        {

            private string emailAddressField;

            private string listIDField;

            private SubscriberClickedLink[] clickedLinksField;

            /// <remarks/>
            public string EmailAddress
            {
                get
                {
                    return this.emailAddressField;
                }
                set
                {
                    this.emailAddressField = value;
                }
            }

            /// <remarks/>
            public string ListID
            {
                get
                {
                    return this.listIDField;
                }
                set
                {
                    this.listIDField = value;
                }
            }

            /// <remarks/>
            public SubscriberClickedLink[] ClickedLinks
            {
                get
                {
                    return this.clickedLinksField;
                }
                set
                {
                    this.clickedLinksField = value;
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
        [System.SerializableAttribute()]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.createsend.com/api/")]
        public partial class SubscriberOpen
        {

            private string emailAddressField;

            private string listIDField;

            private int numberOfOpensField;

            /// <remarks/>
            public string EmailAddress
            {
                get
                {
                    return this.emailAddressField;
                }
                set
                {
                    this.emailAddressField = value;
                }
            }

            /// <remarks/>
            public string ListID
            {
                get
                {
                    return this.listIDField;
                }
                set
                {
                    this.listIDField = value;
                }
            }

            /// <remarks/>
            public int NumberOfOpens
            {
                get
                {
                    return this.numberOfOpensField;
                }
                set
                {
                    this.numberOfOpensField = value;
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
        [System.SerializableAttribute()]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.createsend.com/api/")]
        public partial class SubscriberBounce
        {

            private string emailAddressField;

            private string listIDField;

            private string bounceTypeField;

            /// <remarks/>
            public string EmailAddress
            {
                get
                {
                    return this.emailAddressField;
                }
                set
                {
                    this.emailAddressField = value;
                }
            }

            /// <remarks/>
            public string ListID
            {
                get
                {
                    return this.listIDField;
                }
                set
                {
                    this.listIDField = value;
                }
            }

            /// <remarks/>
            public string BounceType
            {
                get
                {
                    return this.bounceTypeField;
                }
                set
                {
                    this.bounceTypeField = value;
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
        [System.SerializableAttribute()]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.createsend.com/api/")]
        public partial class SubscriberUnsubscribe
        {

            private string emailAddressField;

            private string listIDField;

            /// <remarks/>
            public string EmailAddress
            {
                get
                {
                    return this.emailAddressField;
                }
                set
                {
                    this.emailAddressField = value;
                }
            }

            /// <remarks/>
            public string ListID
            {
                get
                {
                    return this.listIDField;
                }
                set
                {
                    this.listIDField = value;
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
        [System.SerializableAttribute()]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.createsend.com/api/")]
        public partial class CampaignSummary
        {

            private int recipientsField;

            private int totalOpenedField;

            private int clicksField;

            private int unsubscribedField;

            private int bouncedField;

            /// <remarks/>
            public int Recipients
            {
                get
                {
                    return this.recipientsField;
                }
                set
                {
                    this.recipientsField = value;
                }
            }

            /// <remarks/>
            public int TotalOpened
            {
                get
                {
                    return this.totalOpenedField;
                }
                set
                {
                    this.totalOpenedField = value;
                }
            }

            /// <remarks/>
            public int Clicks
            {
                get
                {
                    return this.clicksField;
                }
                set
                {
                    this.clicksField = value;
                }
            }

            /// <remarks/>
            public int Unsubscribed
            {
                get
                {
                    return this.unsubscribedField;
                }
                set
                {
                    this.unsubscribedField = value;
                }
            }

            /// <remarks/>
            public int Bounced
            {
                get
                {
                    return this.bouncedField;
                }
                set
                {
                    this.bouncedField = value;
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
        [System.SerializableAttribute()]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.createsend.com/api/")]
        public partial class Client
        {

            private string clientIDField;

            private string nameField;

            /// <remarks/>
            public string ClientID
            {
                get
                {
                    return this.clientIDField;
                }
                set
                {
                    this.clientIDField = value;
                }
            }

            /// <remarks/>
            public string Name
            {
                get
                {
                    return this.nameField;
                }
                set
                {
                    this.nameField = value;
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "2.0.50727.1433")]
        [System.SerializableAttribute()]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        [System.Xml.Serialization.XmlTypeAttribute(Namespace = "http://api.createsend.com/api/")]
        public partial class Result
        {

            private int codeField;

            private string messageField;

            /// <remarks/>
            public int Code
            {
                get
                {
                    return this.codeField;
                }
                set
                {
                    this.codeField = value;
                }
            }

            /// <remarks/>
            public string Message
            {
                get
                {
                    return this.messageField;
                }
                set
                {
                    this.messageField = value;
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void AddSubscriberWithCustomFieldsCompletedEventHandler(object sender, AddSubscriberWithCustomFieldsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class AddSubscriberWithCustomFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal AddSubscriberWithCustomFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public Result Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((Result)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void AddAndResubscribeWithCustomFieldsCompletedEventHandler(object sender, AddAndResubscribeWithCustomFieldsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class AddAndResubscribeWithCustomFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal AddAndResubscribeWithCustomFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public Result Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((Result)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void AddSubscriberCompletedEventHandler(object sender, AddSubscriberCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class AddSubscriberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal AddSubscriberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public Result Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((Result)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void AddAndResubscribeCompletedEventHandler(object sender, AddAndResubscribeCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class AddAndResubscribeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal AddAndResubscribeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public Result Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((Result)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void UnsubscribeCompletedEventHandler(object sender, UnsubscribeCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class UnsubscribeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal UnsubscribeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public Result Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((Result)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void GetSubscribersCompletedEventHandler(object sender, GetSubscribersCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetSubscribersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetSubscribersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public object Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((object)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void GetUnsubscribedCompletedEventHandler(object sender, GetUnsubscribedCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetUnsubscribedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetUnsubscribedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public object Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((object)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void GetBouncedCompletedEventHandler(object sender, GetBouncedCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetBouncedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetBouncedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public object Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((object)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void GetSingleSubscriberCompletedEventHandler(object sender, GetSingleSubscriberCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetSingleSubscriberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetSingleSubscriberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public object Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((object)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void GetIsSubscribedCompletedEventHandler(object sender, GetIsSubscribedCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetIsSubscribedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetIsSubscribedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public object Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((object)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void GetClientCampaignsCompletedEventHandler(object sender, GetClientCampaignsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetClientCampaignsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetClientCampaignsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public object Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((object)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void GetClientListsCompletedEventHandler(object sender, GetClientListsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetClientListsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetClientListsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public object Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((object)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void GetClientSegmentsCompletedEventHandler(object sender, GetClientSegmentsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetClientSegmentsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetClientSegmentsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public object Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((object)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void GetSubscriberClicksCompletedEventHandler(object sender, GetSubscriberClicksCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetSubscriberClicksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetSubscriberClicksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public object Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((object)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void GetCampaignOpensCompletedEventHandler(object sender, GetCampaignOpensCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetCampaignOpensCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetCampaignOpensCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public object Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((object)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void GetCampaignBouncesCompletedEventHandler(object sender, GetCampaignBouncesCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetCampaignBouncesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetCampaignBouncesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public object Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((object)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void GetCampaignUnsubscribesCompletedEventHandler(object sender, GetCampaignUnsubscribesCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetCampaignUnsubscribesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetCampaignUnsubscribesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public object Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((object)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void GetCampaignSummaryCompletedEventHandler(object sender, GetCampaignSummaryCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetCampaignSummaryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetCampaignSummaryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public object Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((object)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void GetCampaignListsCompletedEventHandler(object sender, GetCampaignListsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetCampaignListsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetCampaignListsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public object Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((object)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void GetClientsCompletedEventHandler(object sender, GetClientsCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetClientsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetClientsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public object Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((object)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void GetSystemDateCompletedEventHandler(object sender, GetSystemDateCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class GetSystemDateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal GetSystemDateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public object Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((object)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void CreateCampaignCompletedEventHandler(object sender, CreateCampaignCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class CreateCampaignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal CreateCampaignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public object Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((object)(this.results[0]));
                }
            }
        }

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        public delegate void SendCampaignCompletedEventHandler(object sender, SendCampaignCompletedEventArgs e);

        /// <remarks/>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "2.0.50727.1433")]
        [System.Diagnostics.DebuggerStepThroughAttribute()]
        [System.ComponentModel.DesignerCategoryAttribute("code")]
        public partial class SendCampaignCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
        {

            private object[] results;

            internal SendCampaignCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
            {
                this.results = results;
            }

            /// <remarks/>
            public Result Result
            {
                get
                {
                    this.RaiseExceptionIfNecessary();
                    return ((Result)(this.results[0]));
                }
            }
        }
    }
}

#pragma warning restore 1591